// Autogenerated from ocr2Proto.proto with Protobuf.toJSON()
export const descriptor = {
  nested: {
    offchainreporting2_config: {
      nested: {
        OffchainConfigProto: {
          fields: {
            deltaProgressNanoseconds: { type: 'uint64', id: 1 },
            deltaResendNanoseconds: { type: 'uint64', id: 2 },
            deltaRoundNanoseconds: { type: 'uint64', id: 3 },
            deltaGraceNanoseconds: { type: 'uint64', id: 4 },
            deltaStageNanoseconds: { type: 'uint64', id: 5 },
            rMax: { type: 'uint32', id: 6 },
            s: { rule: 'repeated', type: 'uint32', id: 7 },
            offchainPublicKeys: { rule: 'repeated', type: 'bytes', id: 8 },
            peerIds: { rule: 'repeated', type: 'string', id: 9 },
            reportingPluginConfig: { type: 'bytes', id: 10 },
            maxDurationQueryNanoseconds: { type: 'uint64', id: 11 },
            maxDurationObservationNanoseconds: { type: 'uint64', id: 12 },
            maxDurationReportNanoseconds: { type: 'uint64', id: 13 },
            maxDurationShouldAcceptFinalizedReportNanoseconds: { type: 'uint64', id: 14 },
            maxDurationShouldTransmitAcceptedReportNanoseconds: { type: 'uint64', id: 15 },
            sharedSecretEncryptions: { type: 'SharedSecretEncryptionsProto', id: 16 },
          },
        },
        SharedSecretEncryptionsProto: {
          fields: {
            diffieHellmanPoint: { type: 'bytes', id: 1 },
            sharedSecretHash: { type: 'bytes', id: 2 },
            encryptions: { rule: 'repeated', type: 'bytes', id: 3 },
          },
        },
        ReportingPluginConfig: {
          fields: {
            alphaReportInfinite: { type: 'bool', id: 1 },
            alphaReportPpb: { type: 'uint64', id: 2 },
            alphaAcceptInfinite: { type: 'bool', id: 3 },
            alphaAcceptPpb: { type: 'uint64', id: 4 },
            deltaCNanoseconds: { type: 'uint64', id: 5 },
          },
        },
      },
    },
  },
}
