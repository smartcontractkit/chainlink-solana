name: e2e_smoke_tests
on: 
  workflow_call:
    inputs:
      repo_name:
        required: true
        description: The name of the github repository
        default: ${{ github.repository }}
        type: string
      ref:
        required: true
        description: The git ref to use
        default: ${{ github.sha }}
        type: string
      cl_repo:
        required: true
        description: The chainlik ecr repository to use
        default: public.ecr.aws/z0b1w9r9/chainlink
        type: string
      cl_image:
        required: true
        description: The chainlink image to use
        default: develop
        type: string
      token:
        required: false
        description: The GITHUB_TOKEN for the workflow
        default: ${{ github.token }}
        type: string
    secrets:
      QA_AWS_REGION:
        required: true
        description: AWS Region where K8s cluster is located
      QA_AWS_ROLE_TO_ASSUME:
        required: true
        description: AWS Role to access K8s cluster
      QA_KUBECONFIG:
        required: true
        description: KUBECONFIG for cluster

jobs:
  e2e_build_contracts:
    environment: integration
    permissions:
      checks: write
      pull-requests: write
      id-token: write
      contents: read
    name: E2E Build Contracts
    runs-on: ubuntu-latest
    container:
      image: projectserum/build:v0.22.1
      env:
        RUSTUP_HOME: "/root/.rustup"
        FORCE_COLOR: 1
    steps:
      - name: Checkout the repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      - name: Build contracts
        uses: ./.github/actions/build_contract_artifacts
  e2e_run_smoke_tests:
    name: E2E Run Smoke Tests
    runs-on: ubuntu-latest
    needs: e2e_build_contracts
    steps:
      - name: Checkout the repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
        with:
          repository: ${{ inputs.repo_name }}
          ref: ${{ inputs.ref }}
      - uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: tool-versions
      - name: Setup go ${{ steps.tool-versions.outputs.golang_version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.tool-versions.outputs.golang_version }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.QA_AWS_REGION }}
          role-to-assume: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.QA_KUBECONFIG }}
      - name: Cache Vendor Packages
        uses: actions/cache@v2
        id: cache-packages
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go2-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go2-
      - name: Download Go Vendor Packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: make download
      - name: Install Ginkgo CLI
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: make install
      - name: Check for ginkgo ls
        run: ls ~/go/bin/
      - name: Download Artifacts
        uses: actions/download-artifact@master
        with:
          name: target
          path: contracts/target/deploy
      - name: Echo inputs
        run: echo ${{ inputs.cl_repo }} ${{ inputs.cl_image }}
      - name: Env vars
        run: env
      - name: Run Tests
        env:
          SELECTED_NETWORKS: solana
          CHAINLINK_IMAGE: ${{ inputs.cl_repo }}
          CHAINLINK_VERSION: ${{ inputs.cl_image }}
          CGO_ENABLED: 1
        run: |
          PATH=$PATH:$(go env GOPATH)/bin
          export PATH
          make test_smoke
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: ${{ inputs.publish_report_paths }}
          github_token: ${{ inputs.token }}
          check_name: ${{ inputs.publish_check_name }}
          comment_mode: create new
      - name: Publish Artifacts
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: test-logs
          path: ./tests/e2e/smoke/logs