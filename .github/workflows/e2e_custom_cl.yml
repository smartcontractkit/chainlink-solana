name: e2e_tests_custom_cl_image
on:
  push:
  workflow_dispatch:
    inputs:
      cl_branch_ref:
        description: Chainlink repo branch to integrate with
        required: true
        default: develop
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: projectserum/build:v0.20.1
      env:
        RUSTUP_HOME: "/root/.rustup"
        FORCE_COLOR: 1
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ inputs.repo_name }}
      - run: echo $HOME
      - run: echo $PATH
      - run: |
          npm config set -- '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          NPM_TOKEN=${NPM_TOKEN} yarn install --frozen-lockfile
      - name: Generate program_ids
        run: ./scripts/programs-keys-gen.sh
      - run: anchor build
        working-directory: contracts
      - uses: actions/upload-artifact@master
        with:
          name: target
          path: contracts/target/deploy
  build_custom_cl_image:
    name: Build custom CL image
    # target branch can't be set as var, it's from where we getting pipeline code
    uses: smartcontractkit/chainlink/.github/workflows/build-custom.yml@develop
    with:
      cl_repo: smartcontractkit/chainlink
      # by default we are integrating with develop
      cl_ref: ${{ github.event.inputs.cl_branch_ref }}
      # commit of the caller branch
      dep_solana_sha: ${{ github.sha }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.QA_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.QA_AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.QA_AWS_REGION }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
      QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
  smoke:
    runs-on: ubuntu-latest
    needs: [build, build_custom_cl_image]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: go version
        run: go version
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: 1.17.2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.QA_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.QA_AWS_SECRET_KEY }}
          aws-region: ${{ secrets.QA_AWS_REGION }}
          role-to-assume: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.QA_KUBECONFIG }}
      - name: Cache Vendor Packages
        uses: actions/cache@v2
        id: cache-packages
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Go Vendor Packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: go mod download
      - name: Install Ginkgo CLI
        run: |
          go get github.com/onsi/ginkgo/v2/ginkgo/generators@v2.1.2
          go get github.com/onsi/ginkgo/v2/ginkgo/internal@v2.1.2
          go get github.com/onsi/ginkgo/v2/ginkgo/labels@v2.1.2
          go install github.com/onsi/ginkgo/v2/ginkgo
      - uses: actions/download-artifact@master
        with:
          name: target
          path: contracts/target/deploy
      - name: Env vars
        run: env
      - name: Run Tests
        env:
          SELECTED_NETWORKS: solana
          CHAINLINK_IMAGE: 795953128386.dkr.ecr.us-west-2.amazonaws.com/chainlink
          CHAINLINK_VERSION: custom.${{ github.sha }}
          CGO_ENABLED: 1
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          ginkgo tests/e2e/smoke
      - name: Publish Test Results
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: "./tests-smoke-report.xml"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Smoke Test Results
      - name: Publish Artifacts
        if: failure()
        uses: actions/upload-artifact@v2.2.4
        with:
          name: test-logs
          path: /home/runner/work/chainlink-solana/chainlink-solana/tests/e2e/logs