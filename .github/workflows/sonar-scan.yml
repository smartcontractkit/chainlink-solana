name: Unit testing and static analysis

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  wait_for_workflows:
    name: Wait for workflows
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.event.merge_group.head_sha }}

      - name: Wait for Workflows
        id: wait
        uses: smartcontractkit/chainlink-github-actions/utils/wait-for-workflows@main
        with:
          max-timeout: "1200"
          polling-interval: "30"
          exclude-workflow-names: "Lint GH Workflows,e2e_tests_custom_cl"
          exclude-workflow-ids: ""
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          DEBUG: "true"
  tools:
    name: Get tool-versions
    runs-on: ubuntu-latest
    steps:
      - name: Check out Code
        uses: actions/checkout@v3
      - name: Parse tool-versions file
        uses: smartcontractkit/tool-versions-to-env-action@v1.0.8
        id: tool-versions
    outputs:
      go-version: ${{ steps.tool-versions.outputs.golang_version }}
      golangci-lint-version: ${{ steps.tool-versions.outputs.golangci-lint_version }}

  sonarqube:
    name: SonarQube Scan
    needs: [wait_for_workflows]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Fetch blame information
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0 # fetches all history for all tags and branches to provide more metadata for sonar reports

      - name: Download Golangci ops reports
        uses: dawidd6/action-download-artifact@v2.27.0
        with:
          workflow: golangci-lint.yml
          workflow_conclusion: ""
          name_is_regexp: true
          name: golangci-lint-ops-report
          if_no_artifact_found: warn

      - name: Download Golangci integration tests reports
        uses: dawidd6/action-download-artifact@v2.27.0
        with:
          workflow: golangci-lint.yml
          workflow_conclusion: ""
          name_is_regexp: true
          name: golangci-lint-integration-tests-report
          if_no_artifact_found: warn

      - name: Download Golangci relay reports
        uses: dawidd6/action-download-artifact@v2.27.0
        with:
          workflow: golangci-lint.yml
          workflow_conclusion: ""
          name_is_regexp: true
          name: golangci-lint-relay-report
          if_no_artifact_found: warn

      - name: Download Relayer unit tests report
        uses: dawidd6/action-download-artifact@v2.27.0
        with:
          workflow: relay.yml
          workflow_conclusion: ""
          name_is_regexp: true
          name: go-relay-test-results
          if_no_artifact_found: warn

      - name: Set SonarQube Report Paths
        id: sonarqube_report_paths
        shell: bash
        run: |
          {
            echo "sonarqube_tests_report_paths=$(find . -type f -name output.txt | paste -sd "," -)"
            echo "sonarqube_coverage_report_paths=$(find . -type f -name '*coverage.txt' | paste -sd "," -)"
            echo "sonarqube_golangci_report_paths=$(find . -type f -name 'golangci-*-report.xml' -printf "%p,")"
          } >> "$GITHUB_OUTPUT"

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@a6ba0aafc293e03de5437af7edbc97f7d3ebc91a # v1.2.0
        with:
          args: >
            -Dsonar.go.tests.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_tests_report_paths }}
            -Dsonar.go.coverage.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_coverage_report_paths }}
            -Dsonar.go.golangci-lint.reportPaths=${{ steps.sonarqube_report_paths.outputs.sonarqube_golangci_report_paths }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

        