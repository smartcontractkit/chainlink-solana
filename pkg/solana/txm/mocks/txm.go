// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	solana "github.com/gagliardetto/solana-go"

	txm "github.com/smartcontractkit/chainlink-solana/pkg/solana/txm"
)

// TxManager is an autogenerated mock type for the TxManager type
type TxManager struct {
	mock.Mock
}

// Enqueue provides a mock function with given fields: accountID, msg, txCfgs
func (_m *TxManager) Enqueue(accountID string, msg *solana.Transaction, txCfgs ...txm.SetTxConfig) error {
	_va := make([]interface{}, len(txCfgs))
	for _i := range txCfgs {
		_va[_i] = txCfgs[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, accountID, msg)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for Enqueue")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *solana.Transaction, ...txm.SetTxConfig) error); ok {
		r0 = rf(accountID, msg, txCfgs...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTxManager creates a new instance of TxManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTxManager(t interface {
	mock.TestingT
	Cleanup(func())
}) *TxManager {
	mock := &TxManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
